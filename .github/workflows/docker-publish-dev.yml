name: Dev Build with Mint Slimming

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-slim-push-platform:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Define image names and tags for ${{ matrix.platform }}
        id: image_vars
        run: |
          PLATFORM_SUFFIX=$(echo ${{ matrix.platform }} | tr '/' '-')
          OWNER_LOWERCASE=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_BASE_NAME_VALUE="ghcr.io/${OWNER_LOWERCASE}/roundcube"
          echo "PLATFORM_SUFFIX=${PLATFORM_SUFFIX}" >> $GITHUB_ENV
          echo "IMAGE_BASE_NAME=${IMAGE_BASE_NAME_VALUE}" >> $GITHUB_ENV
          echo "LOCAL_UNSLIMMED_IMAGE_TAG=${IMAGE_BASE_NAME_VALUE}:dev-unslimmed-local-${PLATFORM_SUFFIX}" >> $GITHUB_ENV
          echo "PLATFORM_SLIM_COMPONENT_TAG=${IMAGE_BASE_NAME_VALUE}:dev-slim-component-${PLATFORM_SUFFIX}" >> $GITHUB_ENV
          echo "CACHE_TAG=${IMAGE_BASE_NAME_VALUE}:buildcache-${PLATFORM_SUFFIX}" >> $GITHUB_ENV

      - name: Build Docker image for ${{ matrix.platform }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          platforms: ${{ matrix.platform }}
          tags: ${{ env.LOCAL_UNSLIMMED_IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.CACHE_TAG }}
          cache-to: type=registry,ref=${{ env.CACHE_TAG }},mode=max

      - name: Install Mint
        run: |
          echo "Installing Mint..."
          curl -sL https://raw.githubusercontent.com/mintoolkit/mint/master/scripts/install-mint.sh | sudo -E bash -
          echo "Mint version:"
          sudo mint version

      - name: Slim image with Mint for ${{ matrix.platform }}
        run: |
          echo "Slimming image ${{ env.LOCAL_UNSLIMMED_IMAGE_TAG }} for ${{ matrix.platform }}"
          echo "Output will be tagged as ${{ env.PLATFORM_SLIM_COMPONENT_TAG }}"
          sudo mint slim --target "${{ env.LOCAL_UNSLIMMED_IMAGE_TAG }}" --tag "${{ env.PLATFORM_SLIM_COMPONENT_TAG }}"
          echo "Docker images after slimming for ${{ matrix.platform }}:"
          docker images ${{ env.IMAGE_BASE_NAME }}

      - name: Push slimmed Docker image component for ${{ matrix.platform }}
        run: |
          echo "Pushing slimmed image component for ${{ matrix.platform }}: ${{ env.PLATFORM_SLIM_COMPONENT_TAG }}"
          docker push "${{ env.PLATFORM_SLIM_COMPONENT_TAG }}"

  create-and-push-manifest:
    runs-on: ubuntu-latest
    needs: build-slim-push-platform
    if: success()
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Define final manifest tag and source component images
        id: manifest_vars
        run: |
          OWNER_LOWERCASE=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_BASE_NAME="ghcr.io/${OWNER_LOWERCASE}/roundcube"
          FINAL_MANIFEST_TAG="${IMAGE_BASE_NAME}:dev"
          SLIMMED_AMD64_COMPONENT_TAG="${IMAGE_BASE_NAME}:dev-slim-component-linux-amd64"
          SLIMMED_ARM64_COMPONENT_TAG="${IMAGE_BASE_NAME}:dev-slim-component-linux-arm64"
          echo "FINAL_MANIFEST_TAG=${FINAL_MANIFEST_TAG}" >> $GITHUB_ENV
          echo "IMAGES_FOR_MANIFEST=${SLIMMED_AMD64_COMPONENT_TAG} ${SLIMMED_ARM64_COMPONENT_TAG}" >> $GITHUB_ENV
          echo "SLIMMED_AMD64_COMPONENT_TAG=${SLIMMED_AMD64_COMPONENT_TAG}" >> $GITHUB_ENV
          echo "SLIMMED_ARM64_COMPONENT_TAG=${SLIMMED_ARM64_COMPONENT_TAG}" >> $GITHUB_ENV

      - name: Create and push manifest list for the :dev tag
        run: |
          echo "Creating manifest list for final tag: ${{ env.FINAL_MANIFEST_TAG }}"
          echo "Source component images: ${{ env.IMAGES_FOR_MANIFEST }}"
          
          docker manifest create ${{ env.FINAL_MANIFEST_TAG }} \
            ${{ env.SLIMMED_AMD64_COMPONENT_TAG }} \
            ${{ env.SLIMMED_ARM64_COMPONENT_TAG }}
            
          docker manifest annotate ${{ env.FINAL_MANIFEST_TAG }} ${{ env.SLIMMED_AMD64_COMPONENT_TAG }} --os linux --arch amd64
          docker manifest annotate ${{ env.FINAL_MANIFEST_TAG }} ${{ env.SLIMMED_ARM64_COMPONENT_TAG }} --os linux --arch arm64

          echo "Pushing manifest list for ${{ env.FINAL_MANIFEST_TAG }}"
          docker manifest push ${{ env.FINAL_MANIFEST_TAG }}
